C51 COMPILER V9.01   VELOCITY_CONTROL                                                      06/04/2015 19:11:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE VELOCITY_CONTROL
OBJECT MODULE PLACED IN velocity_control.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE velocity_control.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          * Author: Bhumika Varshney, ERTS Lab, IIT Bombay
   3          * File name: velocity_control.c
   4          * Functions: left_motor_vel(unsigned int), right_motor_vel(unsigned int), pca_init(), forward()
   5          * Global variable: LF, LB, RF, RB
   6          * This experiment demonstrates simple velocity control operation using PWM.
   7          * Concepts covered: PWM Technique 
   8            
   9           Note: 
  10           1. Make sure that in the configuration options following settings are 
  11           done for proper operation of the code
  12            Microcontroller: P89V51RD2
  13           Frequency: 11.0592 MHz                                                            
  14          2.  Coding Standards followed(For further reference on Coding Standards go to portal link).
  15          *********************************************************************************/
  16          #include<intrins.h>
  17          #include "p89v51rx2.h"
  18          sbit LB=P1^0; // Left Back
  19          sbit LF=P1^1; // Left Forward
  20          sbit RF=P1^2; // Right Forward
  21          sbit RB=P3^4; // Right Back
  22          /*Function name - left_motor_vel
  23          * Input - compare velocity in hexadecimal
  24          * Output - none
  25          * Logic - changes contents of the capture register in order to change velocity
  26          *          ,start left motor with velocity vel(compare value) */
  27          void left_motor_vel(unsigned int vel)
  28          {
  29   1              CCAP0H=vel;
  30   1      }
  31          /*Function name - right_motor_vel
  32          * Input - compare velocity in hexadecimal
  33          * Output - none
  34          * Logic - changes contents of the capture register in order to change velocity,
  35                     start left motor with velocity vel(compare value) */
  36          void right_motor_vel(unsigned int vel)
  37          {
  38   1              CCAP1H=vel;
  39   1      }
  40          /*Function name - pca_init
  41          * Input - none
  42          * Output - none
  43          * Logic - initialise programmable counter array to generate pwm signal */
  44          void pca_init(void)
  45          {
  46   1      //80 sets PCA counter to run at Fosc/6
  47   1      CMOD=0x80;
  48   1      //start PCA counter
  49   1      CCON=0x40;
  50   1      //Left motor duty cycle
  51   1      CCAP0L=0x00;
  52   1      CCAP0H=0xFF;
  53   1      //Right motor duty cycle
  54   1      CCAP1L=0x00;
  55   1      CCAP1H=0xFF;
C51 COMPILER V9.01   VELOCITY_CONTROL                                                      06/04/2015 19:11:33 PAGE 2   

  56   1      //enable PWM and ECOM bits for left motor
  57   1      CCAPM0=0x42;
  58   1      //enable PWM and ECOM bits for right motor
  59   1      CCAPM1=0x42;
  60   1      }
  61          /* Function name - forward
  62          * Input - none 
  63          * Outut - moves the robot in forward direction
  64          * Logic - set appropriate bits high to move forward as per the logic table
  65          */
  66          void forward()
  67          {
  68   1              LF=1;
  69   1              RF=1;
  70   1              LB=0;
  71   1              RB=0;
  72   1      }
  73          /*
  74          * Function Name: main
  75          * Input: None
  76          * Output: int to inform the caller that the program exited correctly or
  77          * incorrectly (C code standard)
  78          * Logic: generates pwm signal by calling above defined functions and setting the desired velocity
  79          * Example Call: Called automatically by the Operating System
  80          *
  81          */
  82          void main()
  83          {
  84   1              pca_init();
  85   1      /*set the motor velocities over here. Use only values
  86   1      in the range 0x00 – 0xFF */
  87   1              left_motor_vel(0x0F);
  88   1              right_motor_vel(0x0F);
  89   1              forward();
  90   1              while(1);
  91   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     57    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
