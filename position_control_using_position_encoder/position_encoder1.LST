C51 COMPILER V9.01   POSITION_ENCODER1                                                     06/12/2015 20:20:34 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE POSITION_ENCODER1
OBJECT MODULE PLACED IN position_encoder1.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE position_encoder1.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************************************
             -*****
   2                          Platform: Fire Bird V P89V51RD2
   3                          Position Control Using Interrupt 1
   4                          Written by: Omkar Pradhan, NEX Robotics Pvt. Ltd.
   5                          Edited By: Sachitanand Malewar, NEX Robotics Pvt. Ltd.
   6                          Last Modification: 2009-12-08
   7                          This program shows how to control position of the robot using left position encoder using interrupt 1.
   8                          Compiled with: uVision3 V3.90; C Compiler: C51.Exe, V8.18
   9          **********************************************************************************************************
             -****/                
  10          
  11          /********************************************************************************
  12          
  13             Copyright (c) 2010, NEX Robotics Pvt. Ltd.                       -*- c -*-
  14             All rights reserved.
  15          
  16             Redistribution and use in source and binary forms, with or without
  17             modification, are permitted provided that the following conditions are met:
  18          
  19             * Redistributions of source code must retain the above copyright
  20               notice, this list of conditions and the following disclaimer.
  21          
  22             * Redistributions in binary form must reproduce the above copyright
  23               notice, this list of conditions and the following disclaimer in
  24               the documentation and/or other materials provided with the
  25               distribution.
  26          
  27             * Neither the name of the copyright holders nor the names of
  28               contributors may be used to endorse or promote products derived
  29               from this software without specific prior written permission.
  30          
  31             * Source code can be used for academic purpose. 
  32                   For commercial use permission form the author needs to be taken.
  33          
  34            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35            AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36            IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  37            ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  38            LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  39            CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  40            SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  41            INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  42            CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  43            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  44            POSSIBILITY OF SUCH DAMAGE. 
  45          
  46            Software released under Creative Commence cc by-nc-sa licence.
  47            For legal information refer to: 
  48            http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode
  49          
  50          ********************************************************************************/
  51          
  52          
  53          #include <intrins.h>
C51 COMPILER V9.01   POSITION_ENCODER1                                                     06/12/2015 20:20:34 PAGE 2   

  54          #include "p89v51rx2.H"
  55          #include "delay_ms.h"
  56          #include "lcd_display.h"
  57          
  58          //program specific declarations
  59          sbit LB=P1^0;       //LEFT BACK Pin.
  60          sbit LF=P1^1;           //LEFT FRONT Pin.
  61          sbit RF=P1^2;           //RIGHT FRONT Pin.
  62          sbit RB=P3^4;           //RIGHT BACK Pin.
  63          
  64          sbit left_velocity=P1^3;  //Left velocity control pin. 
  65          sbit right_velocity=P1^4; //Right velocity control pin. 
  66          
  67          unsigned int left_shaft_count=0;//initialize a variable to store the count pulses of the left position enc
             -oder.
  68          
  69          //initialization routine for Interrupt 1 setup.
  70          void int1_setup() //Initalisation of the Int 1 should be done in the same sequence as given in this functi
             -on.
  71          {
  72   1      TCON = 0x04; //Set Interrupt 1 trigger type to falling edge trigger.
  73   1      IEN0 = 0x84; //External Interrupt 1 Enable and Global Interrupt Enable. 
  74   1      
  75   1      P3 = 0x08; //set P3.3 (INT 1) as input port.
  76   1                         // Can also be written as INT1 = 0; (refer to p89v51rx2.H).
  77   1      }
  78          
  79          
  80          //ISR for external Interrupt 1
  81          void int1_isr(void)interrupt 2     //ISR Routine for External Interrupt 1.
  82                                                                             //Refer to chapter 4 in the software manual (table 4.1)for syntax explanation.
  83          {
  84   1       left_shaft_count++;//when the slotted disc passes through the encoder pulses will be generated,each pulse
             - will generate an interrupt and the right shaft count value will be incremented.
  85   1       IE1 = 0; // When interrupt is processed it is cleared automatically by the hardware  or it can also be cl
             -eared by the software.
  86   1                        // Clearing IE1 flag to 0.    
  87   1      }
  88          
  89          // function for forward motion. 
  90          void forward(void)
  91          {
  92   1      RF=1;
  93   1      LF=1;
  94   1      RB=0;
  95   1      LB=0;
  96   1      }
  97          
  98          // function to stop robot.
  99          void stop(void)
 100          {
 101   1      RF=0;
 102   1      LF=0;
 103   1      RB=0;
 104   1      LB=0;
 105   1      }
 106          
 107          void main()
 108          { 
 109   1       unsigned int reqd_shaft_count_int=0;
 110   1       unsigned int distance=0;
 111   1       lcd_init();
C51 COMPILER V9.01   POSITION_ENCODER1                                                     06/12/2015 20:20:34 PAGE 3   

 112   1       delay_ms(500);
 113   1      
 114   1       distance=500;  //Enter here the distance to be travelled in mm.     
 115   1       
 116   1       reqd_shaft_count_int=(unsigned int)(distance/5.338);  //This equation will calculate the count required f
             -or distance to be travelled.
 117   1       
 118   1       int1_setup();//external linterrupt 1 initialization.
 119   1                                              
 120   1       left_velocity = 1;      //setting motor enable pines to 1
 121   1       right_velocity = 1; //setting motor enable pines to 1
 122   1                                                                                                                
 123   1       forward();       //go forward
 124   1                                    
 125   1       while(left_shaft_count<reqd_shaft_count_int)
 126   1       {
 127   2              lcd_print(1,1,left_shaft_count,3);
 128   2              lcd_print(2,1,reqd_shaft_count_int,3);
 129   2       } //wait till desired distance is covered.
 130   1      
 131   1       stop();         //stop motor                                           
 132   1      
 133   1       while(1);
 134   1       
 135   1      }//main ends                
 136          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    868    ----
   CONSTANT SIZE    =      6    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
