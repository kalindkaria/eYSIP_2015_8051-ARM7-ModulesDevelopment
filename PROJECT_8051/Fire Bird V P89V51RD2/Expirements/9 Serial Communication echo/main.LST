C51 COMPILER V9.01   MAIN                                                                  06/09/2015 15:09:47 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*********************************************************************************************************
             -*****
   2                          Platform: Fire Bird V P89V51RD2
   3                          Serial Communication echo
   4                          Written by: Omkar Pradhan, NEX Robotics Pvt. Ltd.
   5                          Edited By: Sachitanand Malewar, NEX Robotics Pvt. Ltd.
   6                          Last Modification: 2009-12-08
   7                          This Program echos back a character sent from the PC through serial communication
   8                          Compiled with: uVision3 V3.90; C Compiler: C51.Exe, V8.18
   9          **********************************************************************************************************
             -****/        
  10          
  11          /********************************************************************************
  12          
  13             Copyright (c) 2010, NEX Robotics Pvt. Ltd.                       -*- c -*-
  14             All rights reserved.
  15          
  16             Redistribution and use in source and binary forms, with or without
  17             modification, are permitted provided that the following conditions are met:
  18          
  19             * Redistributions of source code must retain the above copyright
  20               notice, this list of conditions and the following disclaimer.
  21          
  22             * Redistributions in binary form must reproduce the above copyright
  23               notice, this list of conditions and the following disclaimer in
  24               the documentation and/or other materials provided with the
  25               distribution.
  26          
  27             * Neither the name of the copyright holders nor the names of
  28               contributors may be used to endorse or promote products derived
  29               from this software without specific prior written permission.
  30          
  31             * Source code can be used for academic purpose. 
  32                   For commercial use permission form the author needs to be taken.
  33          
  34            THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  35            AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  36            IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  37            ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  38            LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  39            CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  40            SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  41            INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  42            CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  43            ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  44            POSSIBILITY OF SUCH DAMAGE. 
  45          
  46            Software released under Creative Commence cc by-nc-sa licence.
  47            For legal information refer to: 
  48            http://creativecommons.org/licenses/by-nc-sa/3.0/legalcode
  49          
  50          ********************************************************************************/
  51          
  52          #include <intrins.h>
  53          #include "p89v51rx2.H"
C51 COMPILER V9.01   MAIN                                                                  06/09/2015 15:09:47 PAGE 2   

  54          
  55          sbit buzzer = P2^7;
  56          
  57          /**************************************************************************
  58                  Function: uart_setup()
  59                  
  60                  Description: This function configures Timer1 for generating the Baudrate.
  61                                       The TH1 register should be written with following hex numbers
  62                                   for desired baud rate. After setting the baudrate, SCON register
  63                                       for enabling Rx and setting up the frame format.
  64                  
  65                                   9600 ----->  0xFD
  66                                       4800 ----->  0xFA
  67                                       2400 ----->  0xF4
  68                                       1200 ----->  0xE8
  69          
  70          **************************************************************************/
  71          void uart_setup()
  72          {
  73   1          TMOD = 0x20;                // configure timer1 for Mode 2 operation for the correct baud rate 
  74   1          TH1 = 0xFD;         // 9600 bps for 11.0592 MHz clock 
  75   1          TCON = 0x40;        // Start timer 1 by setting TR1 = 1 
  76   1          SCON = 0x50;                // Set Serial IO to receive and normal mode 
  77   1              RI=0;               //Receive Interrupt Flag is cleared
  78   1              TI=0;                           //Tx interrupt flag is cleared
  79   1      }                                
  80          
  81          /***************************************************************************
  82                  Function: void char RxData()
  83                  
  84                  Description: This function copies any data that is present in the SBUF 
  85                                       register and returns it to the calling function.
  86          ***************************************************************************/
  87          
  88           unsigned char RxData()
  89          {
  90   1          unsigned char rcv_data;
  91   1              rcv_data = SBUF;              //if any data is available copy it from SBUF
  92   1              return rcv_data;              //return the received data
  93   1      }
  94          
  95          /***************************************************************************
  96                  Function: void TxData(unsigned char tx_data)
  97                  
  98                  Description: This function transmits  any data that is passed to it
  99                               and waits until it is transmitted.
 100          ***************************************************************************/
 101          
 102          void TxData(unsigned char tx_data)
 103          {
 104   1              
 105   1              SBUF = tx_data;                 //Transmit data that is passed to this function
 106   1              while(TI == 0);                                 //wait while data is being transmitted
 107   1      }
 108          
 109          void main(void)
 110          {
 111   1       unsigned char rx_data,tx_data;
 112   1       uart_setup(); // calling the UART setup function
 113   1       while(1)                                       //loop continuously
 114   1       {
 115   2        if (RI==1)                // if any data is present store it and transmit it back 
C51 COMPILER V9.01   MAIN                                                                  06/09/2015 15:09:47 PAGE 3   

 116   2        {
 117   3         rx_data = RxData();      //get the received data
 118   3         tx_data = rx_data;
 119   3         TxData(tx_data);         // transmit it back to the PC. This data can be viewed onto the 'terminal'
 120   3         RI = 0;                  //Clear receive interrupt. Must be cleared by the user.
 121   3         TI = 0;                                      //Clear transmit interrupt. Must be cleared by the user.
 122   3        }
 123   2       }
 124   1      }
 125          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     44    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
