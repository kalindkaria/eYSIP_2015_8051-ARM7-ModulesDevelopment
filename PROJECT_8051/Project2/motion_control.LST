C51 COMPILER V9.01   MOTION_CONTROL                                                        06/01/2015 13:08:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MOTION_CONTROL
OBJECT MODULE PLACED IN motion_control.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE motion_control.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include <intrins.h>
   2          #include "p89v51rx2.h"
   3          //The appropriate bits have been defined as per the logic table for motion control
   4          sbit left_velocity=P1^3;
   5          sbit right_velocity=P1^4;
   6          sbit LB=P1^0;
   7          sbit LF=P1^1;
   8          sbit RF=P1^2;
   9          sbit RB=P3^4;
  10          /* Function name - delay_ms
  11          * Input - time in milli seconds 
  12          * Outut - gives delay for the spcified time before executing next instruction
  13          * Logic - delay can be given in the program by introducing loops
  14          */
  15          void delay_ms(unsigned int ms)
  16          {
  17   1      unsigned int i,j;
  18   1      for(i=0; i<ms; i++)
  19   1      for(j=0; j<53; j++);
  20   1      }
  21          //These are the direction functions to move the motors in various directions
  22          /* Function name - forward
  23          * Input - none 
  24          * Outut - moves the robot in forward direction
  25          * Logic - set appropriate bits high to move forward as per the logic table
  26          */
  27          void forward(void) //go forward
  28          {
  29   1      RF=1;
  30   1      LF=1;
  31   1      RB=0;
  32   1      LB=0;
  33   1      }
  34          /* Function name - backward
  35          * Input - none 
  36          * Outut - moves the robot in backward direction
  37          * Logic - set appropriate bits high to move backward as per the logic table
  38          */
  39          void backward(void) //go backward
  40          {
  41   1      RF=0;
  42   1      LF=0;
  43   1      RB=1;
  44   1      LB=1;
  45   1      }
  46          /* Function name - left
  47          * Input - none 
  48          * Outut - turns the robot in left direction
  49          * Logic - set appropriate bits high to turn left as per the logic table
  50          */
  51          void left(void) //go left ( hard left)
  52          {
  53   1      RF=1;
  54   1      LF=0;
  55   1      RB=0;
C51 COMPILER V9.01   MOTION_CONTROL                                                        06/01/2015 13:08:03 PAGE 2   

  56   1      LB=1;
  57   1      }
  58          /* Function name - right
  59          * Input - none 
  60          * Outut - turns the robot in right direction
  61          * Logic - set appropriate bits high to turn right as per the logic table
  62          */
  63          void right(void) //go right ( hard right)
  64          {
  65   1      RF=0;
  66   1      LF=1;
  67   1      RB=1;
  68   1      LB=0;
  69   1      }
  70          /* Function name - stop
  71          * Input - none 
  72          * Outut - stops the robot
  73          * Logic - set appropriate bits high to stop all motors as per the logic table
  74          */
  75          void stop(void) //stop ( soft stop )
  76          {
  77   1      RF= 0;
  78   1      LF= 0;
  79   1      RB= 0;
  80   1      LB= 0;
  81   1      }
  82          /*
  83          * Function Name: main
  84          * Input: None
  85          * Output: int to inform the caller that the program exited correctly or incorrectly (C code standard)
  86          * Logic: calls the function forward, backward, right and left to move motors accordingly
  87          * Example Call: Called automatically by the Operating System
  88          *
  89          */
  90          void main (void)
  91          {
  92   1      /*here maximum velocity has been set for both the
  93   1      * motors but to vary it one can apply PWM signal on these 2 pins*/
  94   1      left_velocity=1;      
  95   1      right_velocity=1;        
  96   1      forward(); //go forward
  97   1      delay_ms(2000); //delay of 2 seconds
  98   1      stop(); //stop
  99   1      backward(); //go backward
 100   1      delay_ms(1000); //delay of 1 seconds
 101   1      stop(); //stop
 102   1      right(); //go left
 103   1      delay_ms(3000); //delay of 3 seconds
 104   1      stop(); //stop
 105   1      left(); //go right
 106   1      delay_ms(3000); //delay of 3 seconds
 107   1      stop(); //stop
 108   1      delay_ms(5000);
 109   1      }// main ends here


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    133    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
C51 COMPILER V9.01   MOTION_CONTROL                                                        06/01/2015 13:08:03 PAGE 3   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
