C51 COMPILER V9.01   MOTION_CONTROL                                                        06/12/2015 15:44:54 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MOTION_CONTROL
OBJECT MODULE PLACED IN motion_control.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE motion_control.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          * Author: Bhumika Varshney, ERTS Lab, IIT Bombay
   3          * File name: motion_control.c
   4          * Functions: delay_ms(unsigned int)
   5          * Global variable: left_velocity, right_velocity, LF, LB, RF, RB
   6          * This experiment demonstrates simple motion control operation.
   7          * Concepts covered: Motor interfacing 
   8            
   9           Note: 
  10           1. Make sure that in the configuration options following settings are 
  11           done for proper operation of the code
  12            Microcontroller: P89V51RD2
  13           Frequency: 11.0592 MHz                                                            
  14          2.  Coding Standards followed(For further reference on Coding Standards go to portal link).
  15          *********************************************************************************/
  16          #include <intrins.h>
  17          #include "p89v51rx2.h"
  18          //The appropriate bits have been defined as per the logic table for motion control
  19          sbit left_velocity=P1^3;
  20          sbit right_velocity=P1^4;
  21          sbit LB=P1^0;
  22          sbit LF=P1^1;
  23          sbit RF=P1^2;
  24          sbit RB=P3^4;
  25          /* Function name - delay_ms
  26          * Input - time in milli seconds 
  27          * Outut - gives delay for the spcified time before executing next instruction
  28          * Logic - delay can be given in the program by introducing loops
  29          */
  30          void delay_ms(unsigned int ms)
  31          {
  32   1      unsigned int i,j;
  33   1      for(i=0; i<ms; i++)
  34   1      for(j=0; j<53; j++);
  35   1      }
  36          //These are the direction functions to move the motors in various directions
  37          /* Function name - forward
  38          * Input - none 
  39          * Output - moves the robot in forward direction
  40          * Logic - set appropriate bits high to move forward as per the logic table
  41          */
  42          void forward(void) //go forward
  43          {
  44   1      RF=1;
  45   1      LF=1;
  46   1      RB=0;
  47   1      LB=0;
  48   1      }
  49          /* Function name - backward
  50          * Input - none 
  51          * Output - moves the robot in backward direction
  52          * Logic - set appropriate bits high to move backward as per the logic table
  53          */
  54          void backward(void) //go backward
  55          {
C51 COMPILER V9.01   MOTION_CONTROL                                                        06/12/2015 15:44:54 PAGE 2   

  56   1      RF=0;
  57   1      LF=0;
  58   1      RB=1;
  59   1      LB=1;
  60   1      }
  61          /* Function name - left
  62          * Input - none 
  63          * Output - turns the robot in left direction
  64          * Logic - set appropriate bits high to turn left as per the logic table
  65          */
  66          void left(void) //go left ( hard left)
  67          {
  68   1      RF=1;
  69   1      LF=0;
  70   1      RB=0;
  71   1      LB=1;
  72   1      }
  73          /* Function name - right
  74          * Input - none 
  75          * Output - turns the robot in right direction
  76          * Logic - set appropriate bits high to turn right as per the logic table
  77          */
  78          void right(void) //go right ( hard right)
  79          {
  80   1      RF=0;
  81   1      LF=1;
  82   1      RB=1;
  83   1      LB=0;
  84   1      }
  85          /* Function name - stop
  86          * Input - none 
  87          * Output - stops the robot
  88          * Logic - set appropriate bits high to stop all motors as per the logic table
  89          */
  90          void stop(void) //stop ( soft stop )
  91          {
  92   1      RF= 0;
  93   1      LF= 0;
  94   1      RB= 0;
  95   1      LB= 0;
  96   1      }
  97          /*
  98          * Function Name: main
  99          * Input: None
 100          * Output: int to inform the caller that the program exited correctly or incorrectly (C code standard)
 101          * Logic: calls the function forward, backward, right and left to move motors accordingly
 102          * Example Call: Called automatically by the Operating System
 103          *
 104          */
 105          void main (void)
 106          {
 107   1      /*here maximum velocity has been set for both the
 108   1      * motors but to vary it one can apply PWM signal on these 2 pins*/
 109   1      left_velocity=1;      
 110   1      right_velocity=1;        
 111   1      forward(); //go forward
 112   1      delay_ms(2000); //delay of 2 seconds
 113   1      stop(); //stop
 114   1      backward(); //go backward
 115   1      delay_ms(1000); //delay of 1 seconds
 116   1      stop(); //stop
 117   1      right(); //go left
C51 COMPILER V9.01   MOTION_CONTROL                                                        06/12/2015 15:44:54 PAGE 3   

 118   1      delay_ms(3000); //delay of 3 seconds
 119   1      stop(); //stop
 120   1      left(); //go right
 121   1      delay_ms(3000); //delay of 3 seconds
 122   1      stop(); //stop
 123   1      while(1);
 124   1      }// main ends here


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
