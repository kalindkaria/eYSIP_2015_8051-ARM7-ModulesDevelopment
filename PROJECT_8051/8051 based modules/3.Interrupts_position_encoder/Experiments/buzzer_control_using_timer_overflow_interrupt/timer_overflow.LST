C51 COMPILER V9.01   TIMER_OVERFLOW                                                        06/10/2015 18:52:03 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE TIMER_OVERFLOW
OBJECT MODULE PLACED IN timer_overflow.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE timer_overflow.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /*
   2          * Author: Bhumika Varshney, ERTS Lab, IIT Bombay
   3          * File name: timer_overflow.c
   4          * Functions: timer0_setup()
   5          * Global variable: buzzer, unsigned int count
   6          * This experiment demonstrates simple timer overflow interrupt operation.
   7          * Concepts covered: Interrupts Control
   8            
   9           Note: 
  10           1. Make sure that in the configuration options following settings are 
  11           done for proper operation of the code
  12            Microcontroller: P89V51RD2
  13           Frequency: 11.0592 MHz                                                            
  14          2.  Coding Standards followed(For further reference on Coding Standards go to portal link).
  15          ********************************************************************************************/
  16          #include <intrins.h>
  17          #include "p89v51rx2.h"
  18          sbit buzzer=P2^7;  //buzzer = 1; buzzer off, buzzer = 0; buzzer on,
  19          unsigned int count=1;  //count used in ISR
  20          /****************************************************************
  21          * Function: timer0_setup
  22          * Input: none
  23          * Output: none
  24          * Logic: initializes the interrupt registers to set 
  25          *        required count for the counter
  26          *****************************************************************/
  27          void  timer0_setup(void)   
  28          {
  29   1       TMOD=0x01; // Timer 0 in 16 bit external counter mode
  30   1       TH0=0x4b; // reset counter value to 0       
  31   1       TL0=0xFC;      // reset counter value to 0  
  32   1      }
  33          /****************************************************************
  34          * Function: Interrupt Service Routine
  35          * Input: none
  36          * Output: none
  37          * Logic: whenever interrupt0 occurs it executes this routine
  38          *        and after this it returns to the main function
  39          *****************************************************************/
  40          void int1_isr(void)interrupt 1
  41           {
  42   1              if(count==40)//to create a delay of 2 seconds(50x40= 2000ms= 2second)
  43   1              {
  44   2              buzzer=~buzzer; //if buzzer is on it will stop and vicevirsa
  45   2              TR0=0; //stop the timer
  46   2          TF0=0; //clear timer overflow flag
  47   2          TH0=0x4b; // reset counter value to 0       
  48   2          TL0=0xFC;   // reset counter value to 0
  49   2              count=1; //reset the count value to 1 
  50   2          TR0=1; //start the timer
  51   2              
  52   2              }
  53   1              else
  54   1              count++; 
  55   1       }
C51 COMPILER V9.01   TIMER_OVERFLOW                                                        06/10/2015 18:52:03 PAGE 2   

  56           /*
  57          * Function Name: main
  58          * Input: None
  59          * Output: int to inform the caller that the program exited correctly or incorrectly (C code standard)
  60          * Logic: initializes the timer and enable all interrupts 
  61          * Example Call: Called automatically by the Operating System
  62          *
  63          */ 
  64          void main (void)
  65           {
  66   1         timer0_setup(); //initialize the timer
  67   1         IEN0=0x82;      //enable interrupts
  68   1         TR0=1;                //start timer
  69   1         while(1);
  70   1       } //main ends here


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     62    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
